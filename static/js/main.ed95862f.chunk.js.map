{"version":3,"sources":["components/sidebar/account.js","components/sidebar/menu.js","components/sidebar/index.js","components/sales/index.js","components/users/index.js","pages/dashboard/index.js","redux/actions/user/type.js","redux/actions/sale/type.js","App.js","redux/actions/user/index.js","redux/actions/sale/index.js","redux/reducers/user.js","redux/reducers/sale.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Account","className","Avatar","src","Menu","style","color","Sidebar","props","connect","state","sale","sales","totalSale","chart","data","Object","keys","map","h","time","height","xField","yField","point","size","shape","Card","variant","CardContent","toString","split","join","users","user","useState","search","setSearch","filter","setFilter","useEffect","name","createdAt","city","startsWith","toLowerCase","includes","slice","length","Paper","sx","p","display","alignItems","IconButton","type","InputBase","ml","flex","placeholder","inputProps","value","onChange","e","target","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","id","Dashboard","GET_ALL_USERS","GET_ALL_SALES","mapDispatchToProps","getUsers","payload","getSales","Promise","all","fetch","then","res","json","arr","initState","months","combineReducers","action","d","Date","getMonth","getDate","getFullYear","reportsByHours","forEach","getHours","parseFloat","price","values","reduce","sum","currentValue","store","createStore","rootReducer","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed95862f.chunk.js","sourcesContent":["import Avatar from \"@mui/material/Avatar\";\nconst Account = () => {\n    return (\n        <div className=\"account-container\">\n            <div className=\"account-avatar\">\n                <Avatar src=\"\" />\n            </div>\n            <div className=\"account-info\">\n                <div className=\"account-name\">Thai Nguyen</div>\n                <div className=\"account-role\">Superadmin</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Account;","import AssessmentRoundedIcon from '@mui/icons-material/AssessmentRounded';\nimport SupervisorAccountRoundedIcon from '@mui/icons-material/SupervisorAccountRounded';\nimport ContactMailOutlinedIcon from '@mui/icons-material/ContactMailOutlined';\nimport ExitToAppOutlinedIcon from '@mui/icons-material/ExitToAppOutlined';\n\nconst Menu = () => {\n\n    return (\n        <div className=\"menu-wrapper\">\n            <div className=\"menu-container\">\n                <div className=\"menu-item\">\n                    <AssessmentRoundedIcon />\n                    <div className=\"menu-item-name\">\n                        Dashboard\n                    </div>\n                </div>\n                <div className=\"menu-item\">\n                    <SupervisorAccountRoundedIcon />\n                    <div className=\"menu-item-name\">\n                        About Us\n                    </div>\n                </div>\n                <div className=\"menu-item\">\n                    <ContactMailOutlinedIcon />\n                    <div className=\"menu-item-name\">\n                        Contact Us\n                    </div>\n                </div>\n            </div>\n            <div className=\"menu-item-end\">\n                <ExitToAppOutlinedIcon style={{color: \"#979797\"}} />\n                <div>\n                    Log out\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Menu;","import \"./index.css\";\n// import Drawer from '@mui/material/Drawer';\n\nimport Account from \"./account\";\nimport Menu from \"./menu\"\n\nconst Sidebar = props => {\n    return (\n        // <Drawer\n        //     variant=\"permanent\"\n        //     sx={{\n        //         display: { xs: 'none', sm: 'block' },\n        //         '& .MuiDrawer-paper': { width: 253, backgroundColor: \"#E6EAF7\", border: 0 }\n        //     }}\n        //     open\n        // >\n            <div className=\"sidebar-container\">\n                <Account />\n                <Menu />\n            </div>\n        // </Drawer>\n    )\n}\n\nexport default Sidebar;","import { connect } from \"react-redux\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { Line } from '@ant-design/charts';\nimport \"./index.css\";\n\nconst Sales = ({\n    sale: {\n        sales,\n        totalSale\n    }\n}) => {\n\n    const data = Object.keys(sales).map( h => ({\n        time: `${h} am`,\n        sale: sales[h]\n    }));\n    const chart = {\n        data,\n        height: 300,\n        xField: 'time',\n        yField: 'sale',\n        point: {\n            size: 5,\n            shape: 'diamond',\n        }\n    }\n\n    return (\n        <div className=\"card1-wrapper\">\n            <Card variant=\"outlined\">\n                <CardContent>\n                    <div className=\"card1-container\">\n                        <div className=\"card1-title\">Total Sales</div>\n                        <div className=\"card1-subtitle\">${totalSale.toString().split( /(?=(?:\\d{3})+(?:\\.|$))/g ).join( \",\" )}</div>\n                    </div>\n                    {\n                        (chart) && <Line {...chart} />\n                    }\n                </CardContent>\n            </Card>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        sale: state.sale\n    }\n}\n\nexport default connect(mapStateToProps)(Sales);","import { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { \n    TableContainer, Table, TableHead, TableBody, TableRow, TableCell,\n    Paper, IconButton, InputBase\n} from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport \"./index.css\";\n\nconst Users = ({ users }) => {\n\n    const [ search, setSearch ] = useState(\"\");\n    const [ filter, setFilter] = useState([]);\n\n    useEffect(() => {\n        setFilter(\n            users.filter( \n                ({name, createdAt, city}) => ( \n                    search.startsWith(\"@\") ? \n                        city.toLowerCase().includes(search.slice(1,search.length).toLowerCase()) \n                        : \n                        ( name.toLowerCase().includes(search.toLowerCase()) || createdAt.toLowerCase().includes(search.toLowerCase()) || city.toLowerCase().includes(search.toLowerCase()) )\n                )\n            )\n        )\n    }, [search]);\n\n    return (\n        <div className=\"card-wrapper\">\n            <Paper variant=\"outlined\">\n                <div className=\"card-container\">\n                    <div className=\"card-user-header\">\n                        <div className=\"card-title\">Users</div>\n                        <div className=\"card-user-search\">\n                            <Paper\n                                sx={{ p: '1px', display: 'flex', alignItems: 'center' }}\n                                variant=\"outlined\"\n                            >\n                                <IconButton type=\"submit\" sx={{ p: '5px' }} aria-label=\"search\">\n                                    <SearchIcon />\n                                </IconButton>\n                                <InputBase\n                                    sx={{ ml: 1, flex: 1 }}\n                                    placeholder=\"Search\"\n                                    inputProps={{ 'aria-label': 'search' }}\n                                    value={search}\n                                    onChange={ e => setSearch(e.target.value)}\n                                />\n                            </Paper>\n                        </div>\n                    </div>\n                    <div className=\"card-content\">\n                        <TableContainer sx={{ maxHeight: 350 }}>\n                            <Table stickyHeader >\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell><div className=\"table-header\">Full Name</div></TableCell>\n                                        <TableCell><div className=\"table-header\">City</div></TableCell>\n                                        <TableCell><div className=\"table-header\">Date Registered</div></TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                {\n                                    (filter.length === 0) ? \n                                    users.map( user => <TableRow key={user.id}>\n                                        <TableCell>{user.name}</TableCell>\n                                        <TableCell>{user.city}</TableCell>\n                                        <TableCell>{user.createdAt}</TableCell>\n                                    </TableRow>)\n                                    : \n                                    filter.map( user => <TableRow key={user.id}>\n                                        <TableCell>{user.name}</TableCell>\n                                        <TableCell>{user.city}</TableCell>\n                                        <TableCell>{user.createdAt}</TableCell>\n                                    </TableRow>)\n                                }\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        users: state.user.users\n    }\n}\n\nexport default connect(mapStateToProps)(Users);","import './index.css';\nimport Sidebar from '../../components/sidebar';\nimport Sales from '../../components/sales';\nimport Users from '../../components/users';\n\nconst Dashboard = () => {\n  return (\n    <div className=\"wrapper\">\n      <Sidebar />\n      <div className=\"container\">\n        <Sales />\n        <Users />\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","export const GET_ALL_USERS = \"GET_ALL_USERS\";","export const GET_ALL_SALES = \"GET_ALL_SALES\";","import { useEffect } from 'react';\nimport Dashboard from './pages/dashboard';\nimport { getUsers } from './redux/actions/user';\nimport { getSales } from './redux/actions/sale';\nimport { connect } from \"react-redux\";\n\nconst App = ({ getUsers, getSales }) => {\n\n    useEffect(() => {\n        Promise.all([\n            fetch(\"https://6155a05293e3550017b08b11.mockapi.io/users\").then( res => res.json()),\n            fetch(\"https://6155a05293e3550017b08b11.mockapi.io/sales \").then( res => res.json())\n        ])\n        .then( arr => {\n            getUsers(arr[0]);\n            getSales(arr[1]);\n        })\n    }, []);\n\n    return (\n        <div>\n            <Dashboard />\n        </div>\n    )\n}\n\nconst mapDispatchToProps = {\n    getUsers, getSales\n}\n\nexport default connect(null, mapDispatchToProps)(App);","import {\n    GET_ALL_USERS\n} from \"./type\";\n\nexport const getUsers = users => ({\n    type: GET_ALL_USERS,\n    payload: users\n});","import {\n    GET_ALL_SALES\n} from \"./type\";\n\nexport const getSales = sales => ({\n    type: GET_ALL_SALES,\n    payload: sales\n})","import {\n    GET_ALL_USERS\n} from \"../actions/user/type\";\n\nconst initState = {\n    users: []\n};\n\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\nexport default function ( state = initState, action ) {\n    switch ( action.type ) {\n        case GET_ALL_USERS: {\n            return {\n                users: action.payload.map( user => {\n                    const d = new Date(user.createdAt);\n                    return {\n                    ...user,\n                    createdAt: `${months[d.getMonth()]} ${d.getDate()}, ${d.getFullYear()}`\n                    } \n                })\n            };\n        }\n        default: \n            return state\n    }\n}","import {\n    GET_ALL_SALES\n} from \"../actions/sale/type\";\n\nconst initState = {\n    sales: [],\n    totalSale: 0\n};\n\nexport default function ( state = initState, action ) {\n    switch ( action.type ) {\n        case GET_ALL_SALES: {\n            let reportsByHours = {};\n            action.payload.forEach( sale => {\n                const d = new Date(sale.createdAt);\n                if (reportsByHours[d.getHours()]) reportsByHours[d.getHours()] += parseFloat(sale.price);\n                else reportsByHours[d.getHours()] = parseFloat(sale.price);\n            });\n\n            return {\n                sales: reportsByHours,\n                totalSale: Object.values(reportsByHours).reduce( (sum, currentValue) => sum += currentValue, 0)\n            }\n        }\n        default: \n            return state\n    }\n}","import { combineReducers } from \"redux\";\nimport user from \"./user\";\nimport sale from \"./sale\";\n\nexport default combineReducers({ user, sale });","import { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\nconst store = createStore(rootReducer, composeWithDevTools());\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}